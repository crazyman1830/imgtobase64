# =============================================================================
# Image Base64 Converter v2.0 - 환경 변수 예제
# =============================================================================
# 이 파일을 복사하여 .env 파일을 생성하고 실제 값으로 수정하세요.
# cp .env.example .env

# =============================================================================
# 애플리케이션 기본 설정
# =============================================================================

# 환경 설정 (development, staging, production)
ENVIRONMENT=development

# 애플리케이션 포트
PORT=5000

# 디버그 모드 (development에서만 true)
DEBUG=true

# 비밀 키 (프로덕션에서는 강력한 키 사용)
SECRET_KEY=your-secret-key-here

# =============================================================================
# 로깅 설정
# =============================================================================

# 로그 레벨 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# 파일 로깅 활성화
ENABLE_FILE_LOGGING=true

# 로그 디렉토리
LOG_DIR=./logs

# 로그 파일 최대 크기 (MB)
LOG_MAX_SIZE_MB=10

# 로그 파일 백업 개수
LOG_BACKUP_COUNT=5

# =============================================================================
# 캐시 설정
# =============================================================================

# 캐시 활성화
CACHE_ENABLED=true

# 캐시 타입 (memory, disk, redis)
CACHE_TYPE=memory

# 캐시 디렉토리 (disk 캐시 사용 시)
CACHE_DIR=./cache

# 캐시 최대 크기 (MB)
CACHE_MAX_SIZE_MB=100

# 캐시 TTL (초)
CACHE_TTL_SECONDS=3600

# 캐시 최대 보관 시간 (시간)
CACHE_MAX_AGE_HOURS=24

# =============================================================================
# Redis 설정 (캐시 타입이 redis인 경우)
# =============================================================================

# Redis 호스트
REDIS_HOST=localhost

# Redis 포트
REDIS_PORT=6379

# Redis 데이터베이스 번호
REDIS_DB=0

# Redis 비밀번호 (필요한 경우)
# REDIS_PASSWORD=your-redis-password

# Redis 연결 타임아웃 (초)
REDIS_TIMEOUT=5

# =============================================================================
# 파일 처리 설정
# =============================================================================

# 최대 파일 크기 (MB)
MAX_FILE_SIZE_MB=10

# 임시 디렉토리
TEMP_DIR=./temp

# 업로드 디렉토리
UPLOAD_DIR=./uploads

# 결과 디렉토리
OUTPUT_DIR=./output

# =============================================================================
# 보안 설정
# =============================================================================

# 보안 스캔 활성화
ENABLE_SECURITY_SCAN=true

# 파일 타입 검증 활성화
ENABLE_FILE_TYPE_VALIDATION=true

# 최대 동시 업로드 수
MAX_CONCURRENT_UPLOADS=5

# 속도 제한 (분당 요청 수)
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# CORS 허용 오리진 (쉼표로 구분)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# =============================================================================
# 성능 설정
# =============================================================================

# 메모리 최적화 활성화
ENABLE_MEMORY_OPTIMIZATION=true

# 최대 동시 처리 수
MAX_CONCURRENT_PROCESSING=3

# 병렬 처리 워커 수
PARALLEL_PROCESSING_WORKERS=4

# 스트리밍 청크 크기 (바이트)
STREAMING_CHUNK_SIZE=1048576

# 메모리 풀 크기
MEMORY_POOL_SIZE=10

# =============================================================================
# 웹 서버 설정
# =============================================================================

# 호스트 주소
HOST=0.0.0.0

# 워커 프로세스 수 (프로덕션)
WORKERS=4

# 워커 클래스 (sync, gevent, eventlet)
WORKER_CLASS=eventlet

# 요청 타임아웃 (초)
TIMEOUT=30

# Keep-alive 타임아웃 (초)
KEEPALIVE_TIMEOUT=5

# =============================================================================
# 데이터베이스 설정 (필요한 경우)
# =============================================================================

# 데이터베이스 URL
# DATABASE_URL=sqlite:///./data/app.db

# 데이터베이스 풀 크기
# DB_POOL_SIZE=5

# 데이터베이스 연결 타임아웃
# DB_TIMEOUT=30

# =============================================================================
# 모니터링 설정
# =============================================================================

# 메트릭 수집 활성화
ENABLE_METRICS=false

# 헬스 체크 엔드포인트 활성화
ENABLE_HEALTH_CHECK=true

# 성능 프로파일링 활성화 (개발 환경에서만)
ENABLE_PROFILING=false

# =============================================================================
# 외부 서비스 설정
# =============================================================================

# 외부 API 키 (필요한 경우)
# EXTERNAL_API_KEY=your-api-key-here

# 외부 서비스 URL
# EXTERNAL_SERVICE_URL=https://api.example.com

# 외부 서비스 타임아웃 (초)
# EXTERNAL_SERVICE_TIMEOUT=10

# =============================================================================
# 개발 도구 설정
# =============================================================================

# 개발 모드에서 자동 리로드
AUTO_RELOAD=true

# 개발 모드에서 상세 에러 출력
VERBOSE_ERRORS=true

# 테스트 모드 활성화
TEST_MODE=false

# =============================================================================
# 설정 파일 경로
# =============================================================================

# 추가 설정 파일 경로 (선택적)
CONFIG_FILE=config.json

# 로깅 설정 파일 경로 (선택적)
# LOGGING_CONFIG_FILE=logging.json

# =============================================================================
# 사용 방법
# =============================================================================

# 1. 이 파일을 .env로 복사:
#    cp .env.example .env

# 2. 실제 값으로 수정:
#    - SECRET_KEY: 강력한 비밀 키로 변경
#    - 데이터베이스 연결 정보 설정
#    - Redis 연결 정보 설정 (사용하는 경우)
#    - 외부 API 키 설정 (필요한 경우)

# 3. 환경별 설정:
#    - 개발: .env (이 파일 기반)
#    - 스테이징: .env.staging
#    - 프로덕션: .env.production

# 4. 보안 주의사항:
#    - .env 파일은 절대 버전 관리에 포함하지 마세요
#    - 프로덕션 환경에서는 환경 변수 또는 비밀 관리 서비스 사용
#    - 정기적으로 비밀 키 및 API 키 교체

# =============================================================================
# 환경별 권장 설정
# =============================================================================

# 개발 환경:
# - DEBUG=true
# - LOG_LEVEL=DEBUG
# - CACHE_TYPE=memory
# - ENABLE_PROFILING=true

# 스테이징 환경:
# - DEBUG=false
# - LOG_LEVEL=INFO
# - CACHE_TYPE=redis
# - ENABLE_METRICS=true

# 프로덕션 환경:
# - DEBUG=false
# - LOG_LEVEL=WARNING
# - CACHE_TYPE=redis
# - ENABLE_SECURITY_SCAN=true
# - WORKERS=4 이상