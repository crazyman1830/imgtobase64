# =============================================================================
# Image Base64 Converter v2.0 - Docker Ignore 파일
# =============================================================================

# =============================================================================
# Git 및 버전 관리
# =============================================================================
.git
.gitignore
.gitattributes
.github/

# =============================================================================
# Python 관련
# =============================================================================
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# =============================================================================
# 개발 도구 및 IDE
# =============================================================================
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# =============================================================================
# 테스트 및 커버리지
# =============================================================================
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/
htmlcov/

# 테스트 출력
test_output/
test_results/
test_reports/
tests/output/
tests/temp/
tests/cache/

# =============================================================================
# 문서 및 예제
# =============================================================================
docs/_build/
*.md
!README.md
.kiro/
examples/
*.example

# =============================================================================
# 로그 및 임시 파일
# =============================================================================
logs/
*.log
*.log.*
log_*.txt
temp/
tmp/
*.tmp
*.temp
*.temporary

# =============================================================================
# 캐시 및 데이터
# =============================================================================
cache/
*.cache
.cache/
data/
database/
*.db
*.sqlite
*.sqlite3

# =============================================================================
# 업로드 및 출력 파일
# =============================================================================
uploads/
user_uploads/
uploaded_images/
output/
results/
converted/
backup/
backups/

# =============================================================================
# 설정 파일 (민감한 정보)
# =============================================================================
.env.*
!.env.example
config.local.json
config.secret.json
config.*.local.json
secrets/
.secrets/
*.secret
*.token
api_keys.txt
credentials.json

# SSL 인증서
*.pem
*.key
*.crt
*.cert
ssl/
certificates/

# =============================================================================
# 성능 및 프로파일링
# =============================================================================
benchmark_results/
performance_reports/
*.benchmark
*.perf
*.prof
*.profile
profiling_results/
stats/
metrics/
monitoring/

# =============================================================================
# Docker 관련
# =============================================================================
Dockerfile.dev
docker-compose.dev.yml
docker-compose.override.yml
docker-compose.local.yml
.dockerignore.local

# =============================================================================
# CI/CD 관련
# =============================================================================
.github/workflows/*.local.yml
.gitlab-ci.local.yml
Jenkinsfile.local

# =============================================================================
# 클라우드 및 배포
# =============================================================================
# Kubernetes
k8s/secrets/
*.secret.yaml

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# AWS
.aws/

# =============================================================================
# 패키지 관리자
# =============================================================================
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock

# Python 패키지 관리자
Pipfile.lock
poetry.lock
.pdm.toml
__pypackages__/

# =============================================================================
# 대용량 파일 및 미디어
# =============================================================================
# 큰 테스트 파일들
*_large.*
*_huge.*
test_*_mb.*

# 압축 파일
*.zip
*.tar.gz
*.rar
*.7z

# 선택적: 모든 이미지 파일 (필요에 따라 주석 해제)
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.bmp
# *.webp
# *.tiff
# *.ico

# =============================================================================
# 기타
# =============================================================================
# 메모리 덤프
*.dmp
*.dump
core.*
memory_*.txt

# 백업 파일
*.backup
*.bak

# 에디터 임시 파일
.vscode/settings.json
.vscode/launch.json
.idea/workspace.xml
.idea/tasks.xml

# =============================================================================
# Docker 빌드 최적화를 위한 주의사항
# =============================================================================

# 1. 필요한 파일만 포함:
#    - 소스 코드 (src/)
#    - 설정 파일 (requirements.txt, config.json)
#    - 정적 파일 (templates/, static/)
#    - 실행 파일 (main.py, run_web.py)

# 2. 제외해야 할 파일들:
#    - 개발 도구 설정
#    - 테스트 파일 및 결과
#    - 로그 및 캐시 파일
#    - 민감한 설정 정보

# 3. 멀티 스테이지 빌드 고려:
#    - 빌드 단계에서만 필요한 파일들
#    - 런타임에 불필요한 개발 의존성

# 4. 레이어 캐싱 최적화:
#    - 자주 변경되지 않는 파일들을 먼저 복사
#    - requirements.txt 등 의존성 파일을 별도로 처리